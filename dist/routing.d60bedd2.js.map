{"version":3,"sources":["node_modules/path-to-regexp/index.js","../../../AppData/Roaming/npm/node_modules/parcel-bundler/node_modules/process/browser.js","node_modules/page.js/index.js","src/scripts/settings.js","../../../AppData/Roaming/npm/node_modules/parcel-bundler/node_modules/path-browserify/index.js","node_modules/marked/src/defaults.js","node_modules/marked/src/helpers.js","node_modules/marked/src/rules.js","node_modules/marked/src/Lexer.js","node_modules/marked/src/Renderer.js","node_modules/marked/src/Slugger.js","node_modules/marked/src/InlineLexer.js","node_modules/marked/src/TextRenderer.js","node_modules/marked/src/Parser.js","node_modules/marked/src/marked.js","src/scripts/register.js","src/scripts/widgets.js","src/scripts/routing.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","path_home","path_404","getDefaults","baseUrl","breaks","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","xhtml","changeDefaults","newDefaults","defaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","test","replace","unescapeTest","unescape","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","target","key","Object","hasOwnProperty","splitCells","tableRow","count","row","cells","match","offset","str","escaped","curr","split","splice","trim","c","invert","l","suffLen","currChar","substr","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","require","block","newline","code","fences","hr","heading","blockquote","list","def","nptable","table","lheading","_paragraph","text","_label","_title","bullet","item","_tag","_comment","paragraph","normal","inline","autolink","url","tag","link","reflink","nolink","strong","em","br","del","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","options","tokens","links","create","rules","src","token","top","next","loose","cap","bull","listStart","listItems","t","space","isordered","istask","ischecked","type","lastToken","trimRight","codeBlockStyle","lang","depth","header","align","ordered","start","slice","join","undefined","task","checked","pre","charCodeAt","lexer","Lexer","lex","infostring","out","quote","raw","slugger","slug","body","content","flags","seen","value","originalSlug","Renderer","prevCapZero","inLink","inRawBlock","lastParenIndex","linkLen","outputLink","InlineLexer","escapes","output","codespan","image","Math","random","toString","Slugger","TextRenderer","inlineText","reverse","tok","pop","peek","cell","j","tablecell","tablerow","nextToken","checkbox","parseText","listitem","errMsg","log","parser","Parser","parse","marked","callback","pending","done","err","message","setOptions","inlineLexer","register","directive","fn","els","document","querySelectorAll","forEach","el","index","getAttribute","render","params","getElementById","fetch","then","resp","innerHTML","location","script","createElement","querySelector","appendChild","context","filename","pathname","pageTemplate","folder","pageContent","includes","Promise","all","template","custom"],"mappings":"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","file":"routing.d60bedd2.js","sourceRoot":"..","sourcesContent":["/**\n * Expose `pathtoRegexp`.\n */\n\nmodule.exports = pathtoRegexp;\n\n/**\n * Match matching groups in a regular expression.\n */\nvar MATCHING_GROUP_REGEXP = /\\((?!\\?)/g;\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String|RegExp|Array} path\n * @param  {Array} keys\n * @param  {Object} options\n * @return {RegExp}\n * @api private\n */\n\nfunction pathtoRegexp(path, keys, options) {\n  options = options || {};\n  keys = keys || [];\n  var strict = options.strict;\n  var end = options.end !== false;\n  var flags = options.sensitive ? '' : 'i';\n  var extraOffset = 0;\n  var keysOffset = keys.length;\n  var i = 0;\n  var name = 0;\n  var m;\n\n  if (path instanceof RegExp) {\n    while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {\n      keys.push({\n        name: name++,\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    return path;\n  }\n\n  if (Array.isArray(path)) {\n    // Map array parts into regexps and return their source. We also pass\n    // the same keys and options instance into every generation to get\n    // consistent matching groups before we join the sources together.\n    path = path.map(function (value) {\n      return pathtoRegexp(value, keys, options).source;\n    });\n\n    return new RegExp('(?:' + path.join('|') + ')', flags);\n  }\n\n  path = ('^' + path + (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?'))\n    .replace(/\\/\\(/g, '/(?:')\n    .replace(/([\\/\\.])/g, '\\\\$1')\n    .replace(/(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?/g, function (match, slash, format, key, capture, star, optional, offset) {\n      slash = slash || '';\n      format = format || '';\n      capture = capture || '([^\\\\/' + format + ']+?)';\n      optional = optional || '';\n\n      keys.push({\n        name: key,\n        optional: !!optional,\n        offset: offset + extraOffset\n      });\n\n      var result = ''\n        + (optional ? '' : slash)\n        + '(?:'\n        + format + (optional ? slash : '') + capture\n        + (star ? '((?:[\\\\/' + format + '].+?)?)' : '')\n        + ')'\n        + optional;\n\n      extraOffset += result.length - match.length;\n\n      return result;\n    })\n    .replace(/\\*/g, function (star, index) {\n      var len = keys.length\n\n      while (len-- > keysOffset && keys[len].offset > index) {\n        keys[len].offset += 3; // Replacement length minus asterisk length.\n      }\n\n      return '(.*)';\n    });\n\n  // This is a workaround for handling unnamed matching groups.\n  while (m = MATCHING_GROUP_REGEXP.exec(path)) {\n    var escapeCount = 0;\n    var index = m.index;\n\n    while (path.charAt(--index) === '\\\\') {\n      escapeCount++;\n    }\n\n    // It's possible to escape the bracket.\n    if (escapeCount % 2 === 1) {\n      continue;\n    }\n\n    if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {\n      keys.splice(keysOffset + i, 0, {\n        name: name++, // Unnamed matching groups must be consistently linear.\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    i++;\n  }\n\n  // If the path is non-ending, match until the end or a slash.\n  path += (end ? '$' : (path[path.length - 1] === '/' ? '' : '(?=\\\\/|$)'));\n\n  return new RegExp(path, flags);\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","  /* globals require, module */\n\n  'use strict';\n\n  /**\n   * Module dependencies.\n   */\n\n  var pathtoRegexp = require('path-to-regexp');\n\n  /**\n   * Module exports.\n   */\n\n  module.exports = page;\n\n  /**\n   * Detect click event\n   */\n  var clickEvent = ('undefined' !== typeof document) && document.ontouchstart ? 'touchstart' : 'click';\n\n  /**\n   * To work properly with the URL\n   * history.location generated polyfill in https://github.com/devote/HTML5-History-API\n   */\n\n  var location = ('undefined' !== typeof window) && (window.history.location || window.location);\n\n  /**\n   * Perform initial dispatch.\n   */\n\n  var dispatch = true;\n\n\n  /**\n   * Decode URL components (query string, pathname, hash).\n   * Accommodates both regular percent encoding and x-www-form-urlencoded format.\n   */\n  var decodeURLComponents = true;\n\n  /**\n   * Base path.\n   */\n\n  var base = '';\n\n  /**\n   * Running flag.\n   */\n\n  var running;\n\n  /**\n   * HashBang option\n   */\n\n  var hashbang = false;\n\n  /**\n   * Previous context, for capturing\n   * page exit events.\n   */\n\n  var prevContext;\n\n  /**\n   * Register `path` with callback `fn()`,\n   * or route `path`, or redirection,\n   * or `page.start()`.\n   *\n   *   page(fn);\n   *   page('*', fn);\n   *   page('/user/:id', load, user);\n   *   page('/user/' + user.id, { some: 'thing' });\n   *   page('/user/' + user.id);\n   *   page('/from', '/to')\n   *   page();\n   *\n   * @param {String|Function} path\n   * @param {Function} fn...\n   * @api public\n   */\n\n  function page(path, fn) {\n    // <callback>\n    if ('function' === typeof path) {\n      return page('*', path);\n    }\n\n    // route <path> to <callback ...>\n    if ('function' === typeof fn) {\n      var route = new Route(path);\n      for (var i = 1; i < arguments.length; ++i) {\n        page.callbacks.push(route.middleware(arguments[i]));\n      }\n      // show <path> with [state]\n    } else if ('string' === typeof path) {\n      page['string' === typeof fn ? 'redirect' : 'show'](path, fn);\n      // start [options]\n    } else {\n      page.start(path);\n    }\n  }\n\n  /**\n   * Callback functions.\n   */\n\n  page.callbacks = [];\n  page.exits = [];\n\n  /**\n   * Current path being processed\n   * @type {String}\n   */\n  page.current = '';\n\n  /**\n   * Number of pages navigated to.\n   * @type {number}\n   *\n   *     page.len == 0;\n   *     page('/login');\n   *     page.len == 1;\n   */\n\n  page.len = 0;\n\n  /**\n   * Get or set basepath to `path`.\n   *\n   * @param {String} path\n   * @api public\n   */\n\n  page.base = function(path) {\n    if (0 === arguments.length) return base;\n    base = path;\n  };\n\n  /**\n   * Bind with the given `options`.\n   *\n   * Options:\n   *\n   *    - `click` bind to click events [true]\n   *    - `popstate` bind to popstate [true]\n   *    - `dispatch` perform initial dispatch [true]\n   *\n   * @param {Object} options\n   * @api public\n   */\n\n  page.start = function(options) {\n    options = options || {};\n    if (running) return;\n    running = true;\n    if (false === options.dispatch) dispatch = false;\n    if (false === options.decodeURLComponents) decodeURLComponents = false;\n    if (false !== options.popstate) window.addEventListener('popstate', onpopstate, false);\n    if (false !== options.click) {\n      document.addEventListener(clickEvent, onclick, false);\n    }\n    if (true === options.hashbang) hashbang = true;\n    if (!dispatch) return;\n    var url = (hashbang && ~location.hash.indexOf('#!')) ? location.hash.substr(2) + location.search : location.pathname + location.search + location.hash;\n    page.replace(url, null, true, dispatch);\n  };\n\n  /**\n   * Unbind click and popstate event handlers.\n   *\n   * @api public\n   */\n\n  page.stop = function() {\n    if (!running) return;\n    page.current = '';\n    page.len = 0;\n    running = false;\n    document.removeEventListener(clickEvent, onclick, false);\n    window.removeEventListener('popstate', onpopstate, false);\n  };\n\n  /**\n   * Show `path` with optional `state` object.\n   *\n   * @param {String} path\n   * @param {Object} state\n   * @param {Boolean} dispatch\n   * @return {Context}\n   * @api public\n   */\n\n  page.show = function(path, state, dispatch, push) {\n    var ctx = new Context(path, state);\n    page.current = ctx.path;\n    if (false !== dispatch) page.dispatch(ctx);\n    if (false !== ctx.handled && false !== push) ctx.pushState();\n    return ctx;\n  };\n\n  /**\n   * Goes back in the history\n   * Back should always let the current route push state and then go back.\n   *\n   * @param {String} path - fallback path to go back if no more history exists, if undefined defaults to page.base\n   * @param {Object} [state]\n   * @api public\n   */\n\n  page.back = function(path, state) {\n    if (page.len > 0) {\n      // this may need more testing to see if all browsers\n      // wait for the next tick to go back in history\n      history.back();\n      page.len--;\n    } else if (path) {\n      setTimeout(function() {\n        page.show(path, state);\n      });\n    }else{\n      setTimeout(function() {\n        page.show(base, state);\n      });\n    }\n  };\n\n\n  /**\n   * Register route to redirect from one path to other\n   * or just redirect to another route\n   *\n   * @param {String} from - if param 'to' is undefined redirects to 'from'\n   * @param {String} [to]\n   * @api public\n   */\n  page.redirect = function(from, to) {\n    // Define route from a path to another\n    if ('string' === typeof from && 'string' === typeof to) {\n      page(from, function(e) {\n        setTimeout(function() {\n          page.replace(to);\n        }, 0);\n      });\n    }\n\n    // Wait for the push state and replace it with another\n    if ('string' === typeof from && 'undefined' === typeof to) {\n      setTimeout(function() {\n        page.replace(from);\n      }, 0);\n    }\n  };\n\n  /**\n   * Replace `path` with optional `state` object.\n   *\n   * @param {String} path\n   * @param {Object} state\n   * @return {Context}\n   * @api public\n   */\n\n\n  page.replace = function(path, state, init, dispatch) {\n    var ctx = new Context(path, state);\n    page.current = ctx.path;\n    ctx.init = init;\n    ctx.save(); // save before dispatching, which may redirect\n    if (false !== dispatch) page.dispatch(ctx);\n    return ctx;\n  };\n\n  /**\n   * Dispatch the given `ctx`.\n   *\n   * @param {Object} ctx\n   * @api private\n   */\n\n  page.dispatch = function(ctx) {\n    var prev = prevContext,\n      i = 0,\n      j = 0;\n\n    prevContext = ctx;\n\n    function nextExit() {\n      var fn = page.exits[j++];\n      if (!fn) return nextEnter();\n      fn(prev, nextExit);\n    }\n\n    function nextEnter() {\n      var fn = page.callbacks[i++];\n\n      if (ctx.path !== page.current) {\n        ctx.handled = false;\n        return;\n      }\n      if (!fn) return unhandled(ctx);\n      fn(ctx, nextEnter);\n    }\n\n    if (prev) {\n      nextExit();\n    } else {\n      nextEnter();\n    }\n  };\n\n  /**\n   * Unhandled `ctx`. When it's not the initial\n   * popstate then redirect. If you wish to handle\n   * 404s on your own use `page('*', callback)`.\n   *\n   * @param {Context} ctx\n   * @api private\n   */\n\n  function unhandled(ctx) {\n    if (ctx.handled) return;\n    var current;\n\n    if (hashbang) {\n      current = base + location.hash.replace('#!', '');\n    } else {\n      current = location.pathname + location.search;\n    }\n\n    if (current === ctx.canonicalPath) return;\n    page.stop();\n    ctx.handled = false;\n    location.href = ctx.canonicalPath;\n  }\n\n  /**\n   * Register an exit route on `path` with\n   * callback `fn()`, which will be called\n   * on the previous context when a new\n   * page is visited.\n   */\n  page.exit = function(path, fn) {\n    if (typeof path === 'function') {\n      return page.exit('*', path);\n    }\n\n    var route = new Route(path);\n    for (var i = 1; i < arguments.length; ++i) {\n      page.exits.push(route.middleware(arguments[i]));\n    }\n  };\n\n  /**\n   * Remove URL encoding from the given `str`.\n   * Accommodates whitespace in both x-www-form-urlencoded\n   * and regular percent-encoded form.\n   *\n   * @param {str} URL component to decode\n   */\n  function decodeURLEncodedURIComponent(val) {\n    if (typeof val !== 'string') { return val; }\n    return decodeURLComponents ? decodeURIComponent(val.replace(/\\+/g, ' ')) : val;\n  }\n\n  /**\n   * Initialize a new \"request\" `Context`\n   * with the given `path` and optional initial `state`.\n   *\n   * @param {String} path\n   * @param {Object} state\n   * @api public\n   */\n\n  function Context(path, state) {\n    if ('/' === path[0] && 0 !== path.indexOf(base)) path = base + (hashbang ? '#!' : '') + path;\n    var i = path.indexOf('?');\n\n    this.canonicalPath = path;\n    this.path = path.replace(base, '') || '/';\n    if (hashbang) this.path = this.path.replace('#!', '') || '/';\n\n    this.title = document.title;\n    this.state = state || {};\n    this.state.path = path;\n    this.querystring = ~i ? decodeURLEncodedURIComponent(path.slice(i + 1)) : '';\n    this.pathname = decodeURLEncodedURIComponent(~i ? path.slice(0, i) : path);\n    this.params = {};\n\n    // fragment\n    this.hash = '';\n    if (!hashbang) {\n      if (!~this.path.indexOf('#')) return;\n      var parts = this.path.split('#');\n      this.path = parts[0];\n      this.hash = decodeURLEncodedURIComponent(parts[1]) || '';\n      this.querystring = this.querystring.split('#')[0];\n    }\n  }\n\n  /**\n   * Expose `Context`.\n   */\n\n  page.Context = Context;\n\n  /**\n   * Push state.\n   *\n   * @api private\n   */\n\n  Context.prototype.pushState = function() {\n    page.len++;\n    history.pushState(this.state, this.title, hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);\n  };\n\n  /**\n   * Save the context state.\n   *\n   * @api public\n   */\n\n  Context.prototype.save = function() {\n    history.replaceState(this.state, this.title, hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);\n  };\n\n  /**\n   * Initialize `Route` with the given HTTP `path`,\n   * and an array of `callbacks` and `options`.\n   *\n   * Options:\n   *\n   *   - `sensitive`    enable case-sensitive routes\n   *   - `strict`       enable strict matching for trailing slashes\n   *\n   * @param {String} path\n   * @param {Object} options.\n   * @api private\n   */\n\n  function Route(path, options) {\n    options = options || {};\n    this.path = path;\n    this.method = 'GET';\n    this.regexp = pathtoRegexp(this.path,\n      this.keys = [],\n      options.sensitive,\n      options.strict);\n  }\n\n  /**\n   * Expose `Route`.\n   */\n\n  page.Route = Route;\n\n  /**\n   * Return route middleware with\n   * the given callback `fn()`.\n   *\n   * @param {Function} fn\n   * @return {Function}\n   * @api public\n   */\n\n  Route.prototype.middleware = function(fn) {\n    var self = this;\n    return function(ctx, next) {\n      if (self.match(ctx.path, ctx.params)) return fn(ctx, next);\n      next();\n    };\n  };\n\n  /**\n   * Check if this route matches `path`, if so\n   * populate `params`.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @return {Boolean}\n   * @api private\n   */\n\n  Route.prototype.match = function(path, params) {\n    var keys = this.keys,\n      qsIndex = path.indexOf('?'),\n      pathname = ~qsIndex ? path.slice(0, qsIndex) : path,\n      m = this.regexp.exec(decodeURIComponent(pathname));\n\n    if (!m) return false;\n\n    for (var i = 1, len = m.length; i < len; ++i) {\n      var key = keys[i - 1];\n      if (key) {\n        var val = decodeURLEncodedURIComponent(m[i]);\n        if (val !== undefined || !(hasOwnProperty.call(params, key.name))) {\n          params[key.name] = val;\n        }        \n      }\n\n    }\n\n    return true;\n  };\n\n\n  /**\n   * Handle \"populate\" events.\n   */\n\n  var onpopstate = (function () {\n    var loaded = false;\n    if ('undefined' === typeof window) {\n      return;\n    }\n    if (document.readyState === 'complete') {\n      loaded = true;\n    } else {\n      window.addEventListener('load', function() {\n        setTimeout(function() {\n          loaded = true;\n        }, 0);\n      });\n    }\n    return function onpopstate(e) {\n      if (!loaded) return;\n      if (e.state) {\n        var path = e.state.path;\n        page.replace(path, e.state);\n      } else {\n        page.show(location.pathname + location.hash, undefined, undefined, false);\n      }\n    };\n  })();\n  /**\n   * Handle \"click\" events.\n   */\n\n  function onclick(e) {\n\n    if (1 !== which(e)) return;\n\n    if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n    if (e.defaultPrevented) return;\n\n\n\n    // ensure link\n    var el = e.target;\n    while (el && 'A' !== el.nodeName) el = el.parentNode;\n    if (!el || 'A' !== el.nodeName) return;\n\n\n\n    // Ignore if tag has\n    // 1. \"download\" attribute\n    // 2. rel=\"external\" attribute\n    if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') return;\n\n    // ensure non-hash for the same path\n    var link = el.getAttribute('href');\n    if (!hashbang && el.pathname === location.pathname && (el.hash || '#' === link)) return;\n\n\n\n    // Check for mailto: in the href\n    if (link && link.indexOf('mailto:') > -1) return;\n\n    // check target\n    if (el.target) return;\n\n    // x-origin\n    if (!sameOrigin(el.href)) return;\n\n\n\n    // rebuild path\n    var path = el.pathname + el.search + (el.hash || '');\n\n    // strip leading \"/[drive letter]:\" on NW.js on Windows\n    if (typeof process !== 'undefined' && path.match(/^\\/[a-zA-Z]:\\//)) {\n      path = path.replace(/^\\/[a-zA-Z]:\\//, '/');\n    }\n\n    // same page\n    var orig = path;\n\n    if (path.indexOf(base) === 0) {\n      path = path.substr(base.length);\n    }\n\n    if (hashbang) path = path.replace('#!', '');\n\n    if (base && orig === path) return;\n\n    e.preventDefault();\n    page.show(orig);\n  }\n\n  /**\n   * Event button.\n   */\n\n  function which(e) {\n    e = e || window.event;\n    return null === e.which ? e.button : e.which;\n  }\n\n  /**\n   * Check if `href` is the same origin.\n   */\n\n  function sameOrigin(href) {\n    var origin = location.protocol + '//' + location.hostname;\n    if (location.port) origin += ':' + location.port;\n    return (href && (0 === href.indexOf(origin)));\n  }\n\n  page.sameOrigin = sameOrigin;\n","/* ==========================================================================\r\n   #settings.js\r\n   ========================================================================== */\r\n\r\n/**\r\n * This handles the site settings. It should be the only file that can be\r\n * changed.\r\n */\r\n\r\n //\r\n // Defines the home page.\r\n //\r\nconst path_home = \"/main/home\";\r\n\r\n//\r\n// Defines the 404 page.\r\n//\r\nconst path_404 = \"/404.html\";\r\n\r\n//\r\n// Export the constants.\r\n//\r\nexport { path_home, path_404 }\r\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","function getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    xhtml: false\n  };\n}\n\nfunction changeDefaults(newDefaults) {\n  module.exports.defaults = newDefaults;\n}\n\nmodule.exports = {\n  defaults: getDefaults(),\n  getDefaults,\n  changeDefaults\n};\n","/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\nmodule.exports = {\n  escape,\n  unescape,\n  edit,\n  cleanUrl,\n  resolveUrl,\n  noopTest,\n  merge,\n  splitCells,\n  rtrim,\n  findClosingBracket,\n  checkSanitizeDeprecation\n};\n","const {\n  noopTest,\n  edit,\n  merge\n} = require('./helpers.js');\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noopTest,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' *([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)', // Cells\n  table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' *\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.nptable = edit(block.gfm.nptable)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\nmodule.exports = {\n  block,\n  inline\n};\n","const { defaults } = require('./defaults.js');\nconst { block } = require('./rules.js');\nconst {\n  rtrim,\n  splitCells,\n  escape\n} = require('./helpers.js');\n\n/**\n * Block Lexer\n */\nmodule.exports = class Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.rules = block.normal;\n\n    if (this.options.pedantic) {\n      this.rules = block.pedantic;\n    } else if (this.options.gfm) {\n      this.rules = block.gfm;\n    }\n  }\n\n  /**\n   * Expose Block Rules\n   */\n  static get rules() {\n    return block;\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    return this.token(src, true);\n  };\n\n  /**\n   * Lexing\n   */\n  token(src, top) {\n    src = src.replace(/^ +$/gm, '');\n    let next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        const lastToken = this.tokens[this.tokens.length - 1];\n        src = src.substring(cap[0].length);\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && lastToken.type === 'paragraph') {\n          lastToken.text += '\\n' + cap[0].trimRight();\n        } else {\n          cap = cap[0].replace(/^ {4}/gm, '');\n          this.tokens.push({\n            type: 'code',\n            codeBlockStyle: 'indented',\n            text: !this.options.pedantic\n              ? rtrim(cap, '\\n')\n              : cap\n          });\n        }\n        continue;\n      }\n\n      // fences\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      }\n\n      // heading\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (cap = this.rules.nptable.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // hr\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      }\n\n      // blockquote\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n\n        cap = cap[0].replace(/^ *> ?/gm, '');\n\n        // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        this.token(cap, top);\n\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n\n        continue;\n      }\n\n      // list\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        isordered = bull.length > 1;\n\n        listStart = {\n          type: 'list_start',\n          ordered: isordered,\n          start: isordered ? +bull : '',\n          loose: false\n        };\n\n        this.tokens.push(listStart);\n\n        // Get each top-level item.\n        cap = cap[0].match(this.rules.item);\n\n        listItems = [];\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i];\n\n          // Remove the list item's bullet\n          // so it is seen as the next token.\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n          // Outdent whatever the\n          // list item contains. Hacky.\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n              : item.replace(/^ {1,4}/gm, '');\n          }\n\n          // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n          if (i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n            if (bull.length > 1 ? b.length === 1\n              : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          }\n\n          // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            listStart.loose = true;\n          }\n\n          // Check for task list items\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n\n          t = {\n            type: 'list_item_start',\n            task: istask,\n            checked: ischecked,\n            loose: loose\n          };\n\n          listItems.push(t);\n          this.tokens.push(t);\n\n          // Recurse.\n          this.token(item, false);\n\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        if (listStart.loose) {\n          l = listItems.length;\n          i = 0;\n          for (; i < l; i++) {\n            listItems[i].loose = true;\n          }\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n\n        continue;\n      }\n\n      // html\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize\n            ? 'paragraph'\n            : 'html',\n          pre: !this.options.sanitizer\n            && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n        });\n        continue;\n      }\n\n      // def\n      if (top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        if (!this.tokens.links[tag]) {\n          this.tokens.links[tag] = {\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (cap = this.rules.table.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(\n              item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n              item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // lheading\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n'\n            ? cap[1].slice(0, -1)\n            : cap[1]\n        });\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n};\n","const { defaults } = require('./defaults.js');\nconst {\n  cleanUrl,\n  escape\n} = require('./helpers.js');\n\n/**\n * Renderer\n */\nmodule.exports = class Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  };\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  html(html) {\n    return html;\n  };\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  };\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  };\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  };\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  };\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  };\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  };\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  };\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  text(text) {\n    return text;\n  };\n};\n","/**\n * Slugger generates header id\n */\nmodule.exports = class Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * Convert string to unique id\n   */\n  slug(value) {\n    let slug = value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n\n    if (this.seen.hasOwnProperty(slug)) {\n      const originalSlug = slug;\n      do {\n        this.seen[originalSlug]++;\n        slug = originalSlug + '-' + this.seen[originalSlug];\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    this.seen[slug] = 0;\n\n    return slug;\n  };\n};\n","const Renderer = require('./Renderer.js');\nconst { defaults } = require('./defaults.js');\nconst { inline } = require('./rules.js');\nconst {\n  findClosingBracket,\n  escape\n} = require('./helpers.js');\n\n/**\n * Inline Lexer & Compiler\n */\nmodule.exports = class InlineLexer {\n  constructor(links, options) {\n    this.options = options || defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    } else if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    }\n  }\n\n  /**\n   * Expose Inline Rules\n   */\n  static get rules() {\n    return inline;\n  }\n\n  /**\n   * Static Lexing/Compiling Method\n   */\n  static output(src, links, options) {\n    const inline = new InlineLexer(links, options);\n    return inline.output(src);\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  output(src) {\n    let out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += escape(cap[1]);\n        continue;\n      }\n\n      // tag\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n        if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = true;\n        } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = false;\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.renderer.html(this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]);\n        continue;\n      }\n\n      // link\n      if (cap = this.rules.link.exec(src)) {\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        href = cap[2];\n        if (this.options.pedantic) {\n          link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        out += this.outputLink(cap, {\n          href: InlineLexer.escapes(href),\n          title: InlineLexer.escapes(title)\n        });\n        this.inLink = false;\n        continue;\n      }\n\n      // reflink, nolink\n      if ((cap = this.rules.reflink.exec(src))\n          || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      }\n\n      // strong\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // em\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2].trim(), true));\n        continue;\n      }\n\n      // br\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      }\n\n      // del (gfm)\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      }\n\n      // autolink\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = escape(this.mangle(cap[1]));\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        if (cap[2] === '@') {\n          text = escape(cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n          text = escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n        src = src.substring(cap[0].length);\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (this.inRawBlock) {\n          out += this.renderer.text(this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]);\n        } else {\n          out += this.renderer.text(escape(this.smartypants(cap[0])));\n        }\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  }\n\n  static escapes(text) {\n    return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n  }\n\n  /**\n   * Compile Link\n   */\n  outputLink(cap, link) {\n    const href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n    return cap[0].charAt(0) !== '!'\n      ? this.renderer.link(href, title, this.output(cap[1]))\n      : this.renderer.image(href, title, escape(cap[1]));\n  }\n\n  /**\n   * Smartypants Transformations\n   */\n  smartypants(text) {\n    if (!this.options.smartypants) return text;\n    return text\n      // em-dashes\n      .replace(/---/g, '\\u2014')\n      // en-dashes\n      .replace(/--/g, '\\u2013')\n      // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n      // closing singles & apostrophes\n      .replace(/'/g, '\\u2019')\n      // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n      // closing doubles\n      .replace(/\"/g, '\\u201d')\n      // ellipses\n      .replace(/\\.{3}/g, '\\u2026');\n  }\n\n  /**\n   * Mangle Links\n   */\n  mangle(text) {\n    if (!this.options.mangle) return text;\n    const l = text.length;\n    let out = '',\n      i = 0,\n      ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n};\n","/**\n * TextRenderer\n * returns only the textual part of the token\n */\nmodule.exports = class TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n};\n","const Renderer = require('./Renderer.js');\nconst Slugger = require('./Slugger.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst { defaults } = require('./defaults.js');\nconst {\n  merge,\n  unescape\n} = require('./helpers.js');\n\n/**\n * Parsing & Compiling\n */\nmodule.exports = class Parser {\n  constructor(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  };\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens) {\n    this.inline = new InlineLexer(tokens.links, this.options);\n    // use an InlineLexer with a TextRenderer to extract pure text\n    this.inlineText = new InlineLexer(\n      tokens.links,\n      merge({}, this.options, { renderer: new TextRenderer() })\n    );\n    this.tokens = tokens.reverse();\n\n    let out = '';\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n\n  /**\n   * Next Token\n   */\n  next() {\n    this.token = this.tokens.pop();\n    return this.token;\n  };\n\n  /**\n   * Preview Next Token\n   */\n  peek() {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n\n  /**\n   * Parse Text Tokens\n   */\n  parseText() {\n    let body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n\n  /**\n   * Parse Current Token\n   */\n  tok() {\n    let body = '';\n    switch (this.token.type) {\n      case 'space': {\n        return '';\n      }\n      case 'hr': {\n        return this.renderer.hr();\n      }\n      case 'heading': {\n        return this.renderer.heading(\n          this.inline.output(this.token.text),\n          this.token.depth,\n          unescape(this.inlineText.output(this.token.text)),\n          this.slugger);\n      }\n      case 'code': {\n        return this.renderer.code(this.token.text,\n          this.token.lang,\n          this.token.escaped);\n      }\n      case 'table': {\n        let header = '',\n          i,\n          row,\n          cell,\n          j;\n\n        // header\n        cell = '';\n        for (i = 0; i < this.token.header.length; i++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(this.token.header[i]),\n            { header: true, align: this.token.align[i] }\n          );\n        }\n        header += this.renderer.tablerow(cell);\n\n        for (i = 0; i < this.token.cells.length; i++) {\n          row = this.token.cells[i];\n\n          cell = '';\n          for (j = 0; j < row.length; j++) {\n            cell += this.renderer.tablecell(\n              this.inline.output(row[j]),\n              { header: false, align: this.token.align[j] }\n            );\n          }\n\n          body += this.renderer.tablerow(cell);\n        }\n        return this.renderer.table(header, body);\n      }\n      case 'blockquote_start': {\n        body = '';\n\n        while (this.next().type !== 'blockquote_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.blockquote(body);\n      }\n      case 'list_start': {\n        body = '';\n        const ordered = this.token.ordered,\n          start = this.token.start;\n\n        while (this.next().type !== 'list_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.list(body, ordered, start);\n      }\n      case 'list_item_start': {\n        body = '';\n        const loose = this.token.loose;\n        const checked = this.token.checked;\n        const task = this.token.task;\n\n        if (this.token.task) {\n          if (loose) {\n            if (this.peek().type === 'text') {\n              const nextToken = this.peek();\n              nextToken.text = this.renderer.checkbox(checked) + ' ' + nextToken.text;\n            } else {\n              this.tokens.push({\n                type: 'text',\n                text: this.renderer.checkbox(checked)\n              });\n            }\n          } else {\n            body += this.renderer.checkbox(checked);\n          }\n        }\n\n        while (this.next().type !== 'list_item_end') {\n          body += !loose && this.token.type === 'text'\n            ? this.parseText()\n            : this.tok();\n        }\n        return this.renderer.listitem(body, task, checked);\n      }\n      case 'html': {\n        // TODO parse inline content if parameter markdown=1\n        return this.renderer.html(this.token.text);\n      }\n      case 'paragraph': {\n        return this.renderer.paragraph(this.inline.output(this.token.text));\n      }\n      case 'text': {\n        return this.renderer.paragraph(this.parseText());\n      }\n      default: {\n        const errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n        if (this.options.silent) {\n          console.log(errMsg);\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n  };\n};\n","const Lexer = require('./Lexer.js');\nconst Parser = require('./Parser.js');\nconst Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst Slugger = require('./Slugger.js');\nconst {\n  merge,\n  checkSanitizeDeprecation,\n  escape\n} = require('./helpers.js');\nconst {\n  getDefaults,\n  changeDefaults,\n  defaults\n} = require('./defaults.js');\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    const highlight = opt.highlight;\n    let tokens,\n      pending,\n      i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    const done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      let out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nmodule.exports = marked;\n","/* ==========================================================================\r\n   #register.js\r\n   ========================================================================== */\r\n\r\n/**\r\n * This handles the registration of widgets.\r\n */\r\n\r\n/* register\r\n   ========================================================================== */\r\n\r\nexport default function register(directive, fn) {\r\n\t//\r\n\t// Select all instances.\r\n\t//\r\n\tlet els = document.querySelectorAll('[' + directive + ']');\r\n\t//\r\n\t// Callback for each one.\r\n\t//\r\n\tArray.prototype.forEach.call(els, (el, index) => {\r\n\t\tfn(el, el.getAttribute(directive));\r\n\t});\r\n}\r\n","import register from \"./register.js\";\r\nimport marked from \"marked\";\r\n\r\n/* ==========================================================================\r\n   #widgets.js\r\n   ========================================================================== */\r\n\r\n/**\r\n * This handles the rendering of widgets.\r\n */\r\n\r\n/* render\r\n   ========================================================================== */\r\n\r\nexport default function render(params) {\r\n\t//\r\n\t// Include Widget.\r\n\t//\r\n\tregister(\"flexInclude\", (el, value) => {\r\n\t\tlet target = document.getElementById(el.getAttribute(\"flexTarget\")) || el;\r\n\r\n \t\tfetch(value)\r\n \t\t\t.then((resp) => {\r\n \t\t\t\treturn resp.text();\r\n \t\t\t})\r\n \t\t\t.then((text) => {\r\n \t\t\t\ttarget.innerHTML = marked(text);\r\n \t\t\t});\r\n \t});\r\n\r\n\t//\r\n\t// Redirect Widget.\r\n\t//\r\n\tregister(\"flexRedirect\", (el, value) => {\r\n\t\tlocation.href = value;\r\n\t});\r\n\r\n\t//\r\n\t// Retitle Widget.\r\n\t//\r\n\tregister(\"flexRetitle\", (el, value) => {\r\n\t\tdocument.title = value;\r\n\t});\r\n\r\n\t//\r\n\t// Execute Widget.\r\n\t//\r\n\tregister(\"flexExecute\", (el, value) => {\r\n\t\tlet script = document.createElement('script');\r\n\t\t//\r\n\t\t// Defines the script source.\r\n\t\t//\r\n\t\tscript.src = value;\r\n\t\t//\r\n\t\t// Insert the script element.\r\n\t\t//\r\n\t\tdocument.querySelector('head').appendChild(script);\r\n\t});\r\n}\r\n","import page from \"page.js\";\r\nimport { path_home, path_404 } from \"./settings.js\";\r\nimport path from \"path\";\r\nimport marked from \"marked\";\r\nimport render from \"./widgets.js\";\r\n\r\n/* ==========================================================================\r\n   #routing.js\r\n   ========================================================================== */\r\n\r\n/**\r\n * This handles the registration of routes.\r\n */\r\n\r\n/* Home Page\r\n   ========================================================================== */\r\n\r\npage(\"/\", path_home);\r\n\r\n/* Flex Page\r\n   ========================================================================== */\r\n\r\npage(\"/:folder/:page\", (context) => {\r\n\t//\r\n\t// Define the filename. Strip the extension.\r\n\t//\r\n\tlet filename = context.pathname.replace(/\\.[^/.]+$/, \"\");\r\n\r\n\t//\r\n\t// Define Template page promise.\r\n\t//\r\n\tlet pageTemplate = fetch(\"/static/\" + context.params.folder + \"/template.html\")\r\n\t\t.then((resp) => {\r\n\t\t\treturn resp.text();\r\n\t\t});\r\n\r\n\t//\r\n\t// Define Content page promise.\r\n\t//\r\n\tlet pageContent = fetch(\"/static/\" + filename + \".md\")\r\n\t\t.then((resp) => {\r\n\t\t\treturn resp.text();\r\n\t\t})\r\n\t\t.then((text) => {\r\n\t\t\tif(text.includes(\"</html>\")) {\r\n\t\t\t\treturn \"# Page Not Found\";\r\n\t\t\t}\r\n\r\n\t\t\treturn text;\r\n\t\t});\r\n\r\n\t//\r\n\t// Define the Full page promise.\r\n\t//\r\n\tlet fullPage = Promise.all([\r\n\t\tpageTemplate,\r\n\t\tpageContent\r\n\t]);\r\n\r\n\t//\r\n\t// Execute the Full page promise.\r\n\t//\r\n\tfullPage.then(([template, content]) => {\r\n\t\t//\r\n\t\t// Write to the DOM.\r\n\t\t//\r\n\t\tdocument.getElementById(\"root\").innerHTML = template.replace(\"{content}\", marked(content));\r\n\r\n\t\t//\r\n\t\t// Execute render().\r\n\t\t//\r\n\t\trender(context.params);\r\n\t\t//\r\n\t\t// Execute custom.\r\n\t\t//\r\n\t\tcustom(context.params);\r\n\t});\r\n});\r\n\r\n/* Initialize\r\n   ========================================================================== */\r\n\r\npage();\r\n"]}